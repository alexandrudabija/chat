{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/chat/chat/chat.component.ts","./src/app/components/chat/chat/chat.component.html","./src/app/components/contacts/contacts/contacts.component.ts","./src/app/components/contacts/contacts/contacts.component.html","./src/app/components/userForm/user-form/user-form.component.ts","./src/app/components/userForm/user-form/user-form.component.html","./src/app/environments/environments.ts","./src/app/services/chatroom/chatroom.service.ts","./src/app/services/user/user.service.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\n<app-user-form *ngIf=\"!show\"\n(userInChat)=\"hideFormUser($event)\"\nclass=\" fixed inset-0 z-10 bg-violet-400 flex justify-center items-center  \"></app-user-form>\n\n\n\n\n<div class=\"flex justify-center p-2\" >\n  <h3 class=\"my-2\" >Hello {{userName}} !</h3>\n  <button class=\"w-[200px] mx-2\" mat-raised-button (click)=\"changeUser()\">ChangeUser</button>\n</div>\n\n<div  class=\"w-full flex justify-center\">\n\n\n\n    <div class=\"flex  flex-col items-center \">\n    <app-contacts class=\" p-2 w-full\" (sendChatId)=\"sendChatId($event)\" (usersID)=\"receiveUsersId($event)\"></app-contacts>\n    <app-chat [chatId]=\"chatId\" [usersId]=\"usersId\" class=\"p-2 w-full\"></app-chat>\n\n    </div>\n\n</div>\n","import { Component,OnInit } from '@angular/core';\nimport { UserService } from './services/user/user.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'chat';\n  constructor(private userService: UserService) { }\n  chatId!: string;\n  usersId!: string[]\n  show: boolean = false\n  userName!: string\n  ngOnInit(): void\n  {\n\n  // this.userService.allUsers$.subscribe(data => console.log(data))\n\n\n    if (JSON.parse(localStorage.getItem('userId')!) )\n    {\n\n      this.show = true;\n      this.userService.getUser$(JSON.parse(localStorage.getItem('userId')!)).subscribe((data) => {this.userName =data.name});\n\n\n    }\n    else {this.show =false}\n\n  }\n\n\n\n  receiveUsersId(usersId: string[]):void\n  {\n\n    this.usersId = usersId\n\n  }\n\n  sendChatId(chatId:string) {\n\n    this.chatId=chatId\n  }\n  hideFormUser(obj:  string ): void\n  {\n    this.show = true;\n    this.userName = obj\n  }\n\n  changeUser():void\n  {\n    this.show = false;\n    localStorage.removeItem(\"userId\");\n\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { environment } from './environments/environments';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport { ContactsComponent } from './components/contacts/contacts/contacts.component';\nimport { ChatComponent } from './components/chat/chat/chat.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { UserFormComponent } from './components/userForm/user-form/user-form.component';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { MatIconModule } from '@angular/material/icon';\nimport { UserService } from './services/user/user.service';\nimport { ChatroomService } from './services/chatroom/chatroom.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactsComponent,\n    ChatComponent,\n    UserFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatCardModule,\n    MatInputModule,\n    MatExpansionModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatIconModule,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideFirestore(() => getFirestore())\n\n  ],\n  providers: [UserService,ChatroomService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, map } from 'rxjs';\nimport { ChatroomService } from 'src/app/services/chatroom/chatroom.service';\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  @Input() chatId!: string;\n  @Input() usersId!: string[];\n  messageForm = new FormControl('')\n  userId!: string;\n  messages$!: Observable<any>;\n  sortedMessages: []=[];\n  messages: Array<{\n    chatId: string;\n    id: string;\n    senderId: string;\n    recipientId: string;\n    message: string | null;\n  }> = [];\n\n  newMessage!:string |''\n  edit: boolean = false;\n  thisIdEdit?: string;\n  constructor(private chatroomService: ChatroomService) { }\n\n  ngOnInit(): void {\n    this.userId = JSON.parse(localStorage.getItem('userId')!)\n    this.messages$ = this.chatroomService.messagesArray.asObservable().pipe(\n      map((data: any) => {\n        // Transform the emitted data/messages here if needed\n\n        return data.messages;\n      })\n    );\n\n\n\n    this.chatroomService.getMessages( this.chatId  ? this.chatId : JSON.parse(localStorage.getItem('chatId')!)).subscribe((messages: any) => {\n     \n\n      this.chatroomService.messagesArray.next({ messages: messages })\n    });\n  }\n\n\n\n\n  sendMessage():void\n  {\n\n    const senderId = this.usersId && this.usersId.length > 0\n      ? this.usersId[0]\n      : JSON.parse(localStorage.getItem('usersId')!)[0];\n\n    const recipientId = this.usersId && this.usersId.length > 1\n      ? this.usersId[1]\n      : JSON.parse(localStorage.getItem('usersId')!)[1];\n\n    this.chatroomService.postMessage({\n      chatId: this.chatId ? this.chatId : JSON.parse(localStorage.getItem('chatId')!),\n      senderId: senderId,\n      recipientId: recipientId,\n      message: this.messageForm.value\n    }).subscribe(\n\n      (response: any) => {\n\n        this.ngOnInit();\n        this.messageForm.reset();\n      },\n      error => {\n        // Handle error\n        console.error('Error adding user:', error);\n      }\n\n\n)\n\n\n\n\n  }\n\n  removeMessage(messageId: string):void {\n    this.chatroomService.removeMessage(this.chatId ? this.chatId : JSON.parse(localStorage.getItem('chatId')!), messageId)\n      .then(() => {\n        console.log('Message removed successfully.');\n      })\n      .catch((error) => {\n        console.error('Error removing message:', error);\n      });\n  }\n\n  updateMessage(messageId: string, updatedMessage: string):void {\n    console.log(messageId, updatedMessage);\n\n    this.edit = !this.edit\n    this.thisIdEdit = messageId\n    if (updatedMessage !== undefined && updatedMessage.length > 0) {\n      const chatId = this.chatId || JSON.parse(localStorage.getItem('chatId')!);\n      // console.log(chatId);\n\n      this.chatroomService.updateMessage(chatId, messageId, updatedMessage)\n        .then(() => console.log('Message updated successfully.'))\n        .catch((error) => console.error('Error updating message:', error));\n    }\n  }\n\n\n}\n","<div class=\"h-[400px] bg-slate-300 px-2 w-full rounded-md shadow-md flex flex-col-reverse items-end justify-start\">\n  <!-- Adaugat clasa flex-col-reverse pentru a inversa ordinea mesajelor -->\n  <div class=\"w-[300px] overflow-y-auto\">\n    <ng-container *ngFor=\"let message of messages$ | async\">\n      <div class=\"flex flex-col\" *ngIf=\"message.senderId === userId\">\n        <div class=\"ml-2 flex justify-end items-start\">\n          <div *ngIf=\"edit === true && message.id === thisIdEdit\" class=\"mt-2\">\n            <mat-form-field [style.width.px]=120>\n              <input matInput placeholder=\"{{ message.message }}\" [(ngModel)]=\"newMessage\">\n            </mat-form-field>\n            <button mat-icon-button color=\"warn\"\n              (click)=\"removeMessage(message.id)\"><mat-icon>delete</mat-icon></button>\n            <button mat-icon-button color=\"primary\"\n              (click)=\"updateMessage(message.id, newMessage)\"><mat-icon>edit</mat-icon></button>\n          </div>\n          <div *ngIf=\"!edit\" class=\"w-[100px]\">\n            <p class=\"m-2 break-words self-end bg-blue-200 rounded-lg p-2 max-w-xs\">{{ message.message }}</p>\n            <button mat-icon-button color=\"warn\"\n              (click)=\"removeMessage(message.id)\"><mat-icon>delete</mat-icon></button>\n            <button mat-icon-button color=\"primary\"\n              (click)=\"updateMessage(message.id, newMessage)\"><mat-icon>edit</mat-icon></button>\n          </div>\n        </div>\n      </div>\n      <div class=\"flex flex-col \" *ngIf=\"message.senderId !== userId\">\n        <div class=\"ml-2 flex justify-start items-start w-[100px]\">\n          <p class=\"m-2 break-words self-start bg-gray-200 rounded-lg p-2 max-w-xs\">{{ message.message }}</p>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n\n<div class=\"flex justify-between w-full\">\n  <div class=\"flex justify-between w-full\">\n    <mat-form-field class=\"w-full\">\n      <mat-label>Insert Your Message</mat-label>\n      <input matInput placeholder=\"Insert Your Message\" [formControl]=\"messageForm\">\n    </mat-form-field>\n    <button mat-fab color=\"primary\" class=\"w-full mb-2 ml-2 text-center\" (click)=\"sendMessage()\">Send</button>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { ChatroomService } from 'src/app/services/chatroom/chatroom.service';\nimport { Observable, map } from 'rxjs';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n\n  constructor(private userService: UserService, private chatroomService: ChatroomService)\n  { }\n\n  users$ =new Observable<any>\n  chatId!: string;\n  @Output() usersID: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() sendChatId = new EventEmitter<string>\n   selectedUser! :string // Variable to store the selected user\n  searchControl = new FormControl('')\n\n\n\n\n  ngOnInit(): void {\n    this.chatroomService.getMessages(this.chatId).subscribe((messages: any) => {\n     this.chatroomService.messagesArray.next({ messages: messages }) });\n    // this.users$ = this.userService.allUsers$.pipe(\n    //   map(users => users.filter((user:{id:string,name:string}) => user.id !== JSON.parse(localStorage.getItem('userId')!)))\n    // );\n    this.users$ = this.userService.allUsers$.pipe(\n      map(users => users.filter((user: { id: string }) => user.id !== JSON.parse(localStorage.getItem('userId')!)))\n    );\n\n    this.selectedUser = JSON.parse(localStorage.getItem('userName')!) || 'select user to chat !';\n\n\n\n\n  }\n\n  handleClick()\n  {\n    this.users$ = this.userService.allUsers$.pipe(\n      map(users => users.filter((user: { id: string }) => user.id !== JSON.parse(localStorage.getItem('userId')!)))\n    );\n\n  }\n\n\n  createChat(user: { id: string, name: string, photo: string }):void\n  {\n    localStorage.setItem(\"recipientId\", JSON.stringify(user.id))\n    localStorage.setItem(\"userName\", JSON.stringify(user.name))\n     this.selectedUser=user.name\n    this.chatroomService.postChatRoom([JSON.parse(localStorage.getItem('userId')!), user.id]).subscribe(\n\n      (response:any) => {\n        // Handle successful response\n        this.usersID.emit([JSON.parse(localStorage.getItem('userId')!), user.id]);\n        localStorage.setItem(\"usersId\", JSON.stringify([JSON.parse(localStorage.getItem('userId')!), user.id]))\n        this.sendChatId.emit(response.chatId)\n        this.chatId = response.chatId\n        localStorage.setItem(\"chatId\", JSON.stringify(response.chatId))\n\n\nthis.ngOnInit()\n      },\n      error => {\n        // Handle error\n        console.error('Error adding user:', error);\n      }\n\n)\n\n  }\n\n}\n","<div class=\"container bg-violet-200 h-[200px] px-2 w-full   rounded-md shadow-md \">\n<!-- [style.width.px]=158 for dinamic !-->\n<div class=\"w-full flex justify-center\">\n    <mat-form-field  class=\"w-10/12 m-2\" >\n      <mat-label  class=\"w-full\">{{selectedUser}}</mat-label>\n  <input\n\n  matInput class=\"w-full\"\n  placeholder=\"Search for users\"\n  [formControl]=\"searchControl\"\n  [matAutocomplete]=\"users\"\n(click)=\"handleClick()\"\n  >\n    </mat-form-field>\n\n\n<mat-autocomplete  #users=\"matAutocomplete\">\n<mat-option *ngFor=\"let user of users$ |async\" (onSelectionChange)=\"createChat(user)\">\n  {{user?.name}}\n\n</mat-option>\n</mat-autocomplete>\n\n</div>\n\n\n</div>\n","import { Component, Output, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { UserService } from 'src/app/services/user/user.service';\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n  constructor(private userService: UserService, private formBuilder: FormBuilder) {}\n  @Output() userInChat = new EventEmitter< string >\n  userForm!: FormGroup;\n\n\n  ngOnInit() {\n    this.userForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n\n  get name() {\n\n    return this.userForm.get('name')\n\n  }\n\n  createUser(name: string )\n  {\n\n\n\n    this.userInChat.emit(name )\n\n\n\n    this.userService.postUser({\n      name: name!,\n      photo:\"\"\n\n    }).subscribe(\n      response => {\n        // Handle successful response\n        localStorage.setItem(\"userId\", JSON.stringify(response.idUser))\n\n      },\n      error => {\n        // Handle error\n        console.error('Error adding user:', error);\n      }\n    );\n\n\n\n  }\n\n}\n","<div class=\" flex justify-center   items-center \">\n\n\n    <form [formGroup]=\"userForm\" (submit)=\"createUser(this.userForm.value.name)\"\n    class=\"flex justify-center flex-col text-center items-center\">\n    <mat-form-field>\n      <mat-label>Users</mat-label>\n      <input matInput placeholder=\"Insert Your Name\" formControlName=\"name\">\n\n    </mat-form-field>\n\n<div  *ngIf=\"!name?.valid && name?.touched\">Name is required</div>\n<div *ngIf=\"!name?.valid && name?.touched\">Name should have at least 3 characters</div>\n\n    <button mat-raised-button [disabled]=\"!name?.valid\" class=\"w-[200px] m-2\"  type=\"submit\">Submit Name </button>\n\n     <button mat-raised-button class=\"w-[200px] m-2\" (click)=\"createUser('Anonymous')\">Enter Wiht Anonymous</button>\n    </form>\n\n</div>\n","export const environment =\r\n{\r\n  production: false,\r\n\r\n  firebase: {\r\n    apiKey: \"AIzaSyBDh9VCJ7ZVmywioNZAo2gLtn21GsW0zgM\",\r\n    authDomain: \"chat-3af6d.firebaseapp.com\",\r\n    projectId: \"chat-3af6d\",\r\n    storageBucket: \"chat-3af6d.appspot.com\",\r\n    messagingSenderId: \"463028712261\",\r\n    appId: \"1:463028712261:web:c9a4799937f4a5a600842c\",\r\n    measurementId: \"G-EKN0WD8C5N\"\r\n  },\r\n\r\n  apiGetAllUser: 'https://chat-back-end-six.vercel.app/api/getUser',\r\n  apiPostUser: 'https://chat-back-end-six.vercel.app/api/postUser',\r\n  apiGetUser: 'https://chat-back-end-six.vercel.app/api/getUser/',\r\n  apiPostChat: 'https://chat-back-end-six.vercel.app/api/postChat',\r\n  apiPostMessage: 'https://chat-back-end-six.vercel.app/api/postMessage',\r\n  apiGetMessage: 'https://chat-back-end-six.vercel.app/api/getChatWithMessages/'\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/app/environments/environments';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Firestore, collectionData, collection, updateDoc, deleteDoc, doc } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatroomService {\n\n  constructor(private http: HttpClient, private firestore: Firestore) { }\n\n messagesArray = new BehaviorSubject<any>({ messages: []});\n\n// we send the ids for create a chatRoom\n  postChatRoom(users: Array<string>): Observable<Array<string>>\n  {\n    const data = { users: users };\n\n\n    return this.http.post<Array<string>>(environment.apiPostChat, data) as Observable<Array<string>>;\n\n\n  }\n\n  postMessage(message: { chatId: string, senderId: string, recipientId: string, message: string | null }): Observable<{ chatId: string, senderId: string, recipientId: string, message: string | null }>\n{\n    return this.http.post<{ chatId: string, senderId: string, recipientId: string, message: string | null }>(environment.apiPostMessage, message) as Observable<{ chatId: string, senderId: string, recipientId: string, message: string }>\n\n}\n\n  // getMessages(chatId:string):Observable<any>\n\n  // {\n  //   const url = `${environment.apiGetMessage}${chatId}` ;\n\n  //   return this.http.get<any>(url) as Observable<any>\n\n  // }\n\n  getMessages(chatId: string): Observable<any> {\n    const messagesRef = collection(this.firestore, `chats/${chatId}/messages`);\n    const query = collectionData(messagesRef, { idField: 'id' });\n\n    return query as Observable<any>;\n  }\n\n\n  removeMessage(chatId: string, messageId: string): Promise<void> {\n    const messageRef = doc(this.firestore, `chats/${chatId}/messages/${messageId}`);\n    return deleteDoc(messageRef);\n  }\n\n  // updateMessage(chatId: string, messageId: string, updatedMessage: any): Promise<void> {\n  //   const messageRef = doc(this.firestore, `chats/${chatId}/messages/${messageId}`);\n  //   return updateDoc(messageRef, updatedMessage);\n\n\n  // }\n\n  updateMessage(chatId: string, messageId: string, updatedMessage: string): Promise<void> {\n    const messageRef = doc(this.firestore, `chats/${chatId}/messages/${messageId}`);\n    const updatedData = { message: updatedMessage };\n    return updateDoc(messageRef, updatedData);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/app/environments/environments';\nimport { Observable } from 'rxjs';\nimport { Firestore, collection } from 'firebase/firestore';\nimport { collectionData } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n// , private firestore: Firestore\n  constructor(private http: HttpClient) { }\n\n get allUsers$():Observable<any>\n {\n\n   return this.http.get(environment.apiGetAllUser) as Observable<any>\n\n\n }\n\n  //  allUsers$(): Observable<any> {\n  //   const usersRef = collection(this.firestore, 'users');\n  //   return collectionData(usersRef) as Observable<any>;\n  // }\n\n  getUser$(userId: string): Observable<any> {\n    const url = `${environment.apiGetUser}${userId}`;\n    return this.http.get(url) as Observable<any>;\n  }\n  postUser(user: { name:string,photo:string }): Observable<any> {\n    return this.http.post<{ name: string, photo: string }>(environment.apiPostUser, user);\n  }\n\n\n\n\n\n\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","AppRoutingModule","forRoot","imports","exports","i0","AppComponent","constructor","userService","ngOnInit","JSON","parse","localStorage","getItem","show","getUser$","subscribe","data","userName","name","receiveUsersId","usersId","sendChatId","chatId","hideFormUser","obj","changeUser","removeItem","selectors","decls","vars","consts","template","ctx","BrowserModule","BrowserAnimationsModule","environment","HttpClientModule","MatCardModule","ContactsComponent","ChatComponent","MatInputModule","MatExpansionModule","FormsModule","ReactiveFormsModule","MatButtonModule","MatAutocompleteModule","MatFormFieldModule","UserFormComponent","getFirestore","provideFirestore","initializeApp","provideFirebaseApp","MatIconModule","UserService","ChatroomService","AppModule","bootstrap","firebase","declarations","FormControl","map","chatroomService","userId","messages$","messagesArray","asObservable","pipe","messages","getMessages","next","sendMessage","senderId","length","recipientId","postMessage","message","messageForm","value","response","reset","error","console","removeMessage","messageId","then","log","catch","updateMessage","updatedMessage","edit","thisIdEdit","undefined","inputs","EventEmitter","Observable","users$","allUsers$","users","filter","user","id","selectedUser","handleClick","createChat","setItem","stringify","postChatRoom","usersID","emit","outputs","Validators","formBuilder","userForm","group","required","minLength","get","createUser","userInChat","postUser","photo","idUser","production","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apiGetAllUser","apiPostUser","apiGetUser","apiPostChat","apiPostMessage","apiGetMessage","BehaviorSubject","collectionData","collection","updateDoc","deleteDoc","doc","http","firestore","post","messagesRef","query","idField","messageRef","updatedData","factory","providedIn","url","__NgCli_bootstrap_1","bootstrapModule","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}